---
- name: Configure networking on hosts
  hosts: swarm_nodes
  tasks:
    - name: Stop systemd-resolved service and disable it
      ansible.builtin.systemd_service:
        name: systemd-resolved
        state: stopped
        enabled: false
      become: true

    - name: Populate /etc/resolv.conf with Cloudflare DNS
      ansible.builtin.copy:
        dest: /etc/resolv.conf
        content: |
          nameserver 1.1.1.1
          nameserver 8.8.8.8
        owner: root
        group: root
        mode: '0644'
        force: yes
      become: true

- name: Install Docker
  hosts: swarm_nodes
  roles:
    - role: geerlingguy.docker
      become: true
  tasks:
    - name: Install python deps for ansible
      ansible.builtin.apt:
        name:
          - python3-docker
          - python3-jsondiff
        state: present
        update_cache: true
      become: true

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
      register: docker_user_result
      become: true

    - name: Restart Docker service
      ansible.builtin.systemd:
        name: docker
        state: restarted
      when: docker_user_result.changed

- name: Provision Pi Swarm
  hosts: swarm_nodes
  tasks:
    - name: Init docker swarm
      community.docker.docker_swarm:
        state: present
      register: __output_swarm
      when: inventory_hostname in groups['swarm_managers'][0]

    - name: Install manager
      community.docker.docker_swarm:
        state: join
        timeout: 60
        join_token: "{{ hostvars[groups['swarm_managers'][0]]['__output_swarm']['swarm_facts']['JoinTokens']['Manager'] }}"
        remote_addrs: "{{ groups['swarm_managers'] | map('extract', hostvars, ['ansible_default_ipv4', 'address']) | first }}"
      when: inventory_hostname in groups['swarm_managers'] and inventory_hostname not in groups['swarm_managers'][0]

    - name: Install worker
      community.docker.docker_swarm:
        state: join
        timeout: 60
        join_token: "{{ hostvars[groups['swarm_managers'][0]]['__output_swarm']['swarm_facts']['JoinTokens']['Worker'] }}"
        remote_addrs: "{{ groups['swarm_managers'] | map('extract', hostvars, ['ansible_default_ipv4', 'address']) | first }}"
      when: inventory_hostname in groups['swarm_workers']

- name: Setup GlusterFS
  ansible.builtin.import_playbook: provision_gluster.yml

